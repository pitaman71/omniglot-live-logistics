{"version":3,"sources":["../src/Address.tsx","../src/DateTime.tsx","../src/Municipality.tsx","../src/Where.tsx"],"sourcesContent":["import React from 'react';\nimport Address from 'omniglot-live-media-models/lib/Address';\nimport './Address.css';\n\nexport const Summary = ({\n  value,\n  client\n}: {\n  value?: Address,\n  client?: {\n    assign: (value_: Address) => void,\n    clear: () => void\n  }\n}): JSX.Element => {\n  if (!value?.addressLine1) {\n    return <span className=\"address-summary empty\">No address</span>;\n  }\n\n  const addressSummary = [\n    value.addressLine1,\n    value.addressLine2,\n    value.postalCode\n  ].filter(Boolean).join(', ');\n\n  return (\n    <div className=\"address-summary\" onClick={() => client?.assign(value)}>\n      <span className=\"icon\">üè†</span>\n      <span className=\"content\">{addressSummary}</span>\n    </div>\n  );\n};\n\nexport const Detail = ({\n  value,\n  client\n}: {\n  value?: Address,\n  client?: {\n    assign: (value_: Address) => void,\n    clear: () => void\n  }\n}): JSX.Element => {\n  if (!value && !client) {\n    return <div className=\"address-detail empty\">No address specified</div>;\n  }\n\n  return (\n    <div className=\"address-detail\">\n      <div className=\"fields\">\n        <div className=\"field-row\">\n          <span className=\"label\">Line 1:</span>\n          {client ? (\n            <input\n              type=\"text\"\n              className=\"value-input\"\n              value={value?.addressLine1 || ''}\n              onChange={(e) => client.assign({ ...value, addressLine1: e.target.value })}\n              placeholder=\"Street address\"\n            />\n          ) : (\n            <span className=\"value\">{value?.addressLine1}</span>\n          )}\n        </div>\n        <div className=\"field-row\">\n          <span className=\"label\">Line 2:</span>\n          {client ? (\n            <input\n              type=\"text\"\n              className=\"value-input\"\n              value={value?.addressLine2 || ''}\n              onChange={(e) => client.assign({ ...value, addressLine2: e.target.value })}\n              placeholder=\"Additional address info\"\n            />\n          ) : (\n            <span className=\"value\">{value?.addressLine2}</span>\n          )}\n        </div>\n        <div className=\"field-row\">\n          <span className=\"label\">Postal Code:</span>\n          {client ? (\n            <input\n              type=\"text\"\n              className=\"value-input\"\n              value={value?.postalCode || ''}\n              onChange={(e) => client.assign({ ...value, postalCode: e.target.value })}\n              placeholder=\"Postal code\"\n            />\n          ) : (\n            <span className=\"value\">{value?.postalCode}</span>\n          )}\n        </div>\n      </div>\n      \n      {client && (\n        <div className=\"actions\">\n          <button onClick={() => client.clear()} className=\"clear-button\">‚úñ Clear</button>\n        </div>\n      )}\n    </div>\n  );\n};","import React from 'react';\nimport DateTime from 'omniglot-live-media-models/lib/DateTime';\nimport './DateTime.css';\n\nexport const Preview = ({ \n  value, \n  client\n}: { \n  value: DateTime, \n  client?: { \n    assign: (value_: DateTime) => void, \n    clear: () => void \n  } \n}): JSX.Element => {\n  if (!value?.date && !value?.time) {\n    return <span className=\"datetime-preview empty\">Not specified</span>;\n  }\n\n  return (\n    <div className=\"datetime-preview\" onClick={() => client?.assign(value)}>\n      {value.date && (\n        <span className=\"date\">\n          <span className=\"icon\">üìÖ</span>\n          {`${value.date.year}-${String(value.date.month).padStart(2, '0')}-${String(value.date.day).padStart(2, '0')}`}\n        </span>\n      )}\n      {value.time && (\n        <span className=\"time\">\n          <span className=\"icon\">‚è∞</span>\n          {`${String(value.time.hour).padStart(2, '0')}:${String(value.time.minute).padStart(2, '0')}`}\n          {value.time.second !== undefined && `:${String(value.time.second).padStart(2, '0')}`}\n          {value.time.meridian && ` ${value.time.meridian.toUpperCase()}`}\n          {value.time.zone?.name && ` (${value.time.zone.name})`}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport const Detail = ({ \n  value, \n  client \n}: { \n  value: DateTime, \n  client?: { \n    assign: (value_: DateTime) => void, \n    clear: () => void \n  } \n}): JSX.Element => {\n  if (!value?.date && !value?.time) {\n    return <div className=\"datetime-detail empty\">No date/time specified</div>;\n  }\n\n  return (\n    <div className=\"datetime-detail\">\n      {value.date && (\n        <div className=\"date-section\">\n          <h3><span className=\"icon\">üìÖ</span> Date</h3>\n          <div className=\"date-content\">\n            <div className=\"date-row\">\n              <span className=\"label\">Year:</span>\n              <span className=\"value\">{value.date.year}</span>\n            </div>\n            <div className=\"date-row\">\n              <span className=\"label\">Month:</span>\n              <span className=\"value\">{String(value.date.month).padStart(2, '0')}</span>\n            </div>\n            <div className=\"date-row\">\n              <span className=\"label\">Day:</span>\n              <span className=\"value\">{String(value.date.day).padStart(2, '0')}</span>\n            </div>\n          </div>\n        </div>\n      )}\n      {value.time && (\n        <div className=\"time-section\">\n          <h3><span className=\"icon\">‚è∞</span> Time</h3>\n          <div className=\"time-content\">\n            <div className=\"time-row\">\n              <span className=\"label\">Hour:</span>\n              <span className=\"value\">{String(value.time.hour).padStart(2, '0')}</span>\n            </div>\n            <div className=\"time-row\">\n              <span className=\"label\">Minute:</span>\n              <span className=\"value\">{String(value.time.minute).padStart(2, '0')}</span>\n            </div>\n            {value.time.second !== undefined && (\n              <div className=\"time-row\">\n                <span className=\"label\">Second:</span>\n                <span className=\"value\">{String(value.time.second).padStart(2, '0')}</span>\n              </div>\n            )}\n            {value.time.meridian && (\n              <div className=\"time-row\">\n                <span className=\"label\">Period:</span>\n                <span className=\"value\">{value.time.meridian.toUpperCase()}</span>\n              </div>\n            )}\n            {value.time.zone && (\n              <div className=\"time-row\">\n                <span className=\"label\">Timezone:</span>\n                <span className=\"value\">{value.time.zone.name}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      {client && (\n        <div className=\"actions\">\n          <button onClick={() => client.clear()} className=\"clear-button\">‚úñ Clear</button>\n        </div>\n      )}\n    </div>\n  );\n};","import React from 'react';\nimport Municipality from 'omniglot-live-media-models/lib/Municipality';\nimport Place from 'omniglot-live-media-models/lib/Place';\nimport './Municipality.css';\n\ntype MunicipalityLevel = keyof Municipality;\n\nexport const Summary = ({\n  value,\n  client\n}: {\n  value?: Municipality,\n  client?: {\n    assign: (value_: Municipality) => void,\n    clear: () => void\n  }\n}): JSX.Element => {\n  if (!value?.city && !value?.state && !value?.country) {\n    return <span className=\"municipality-summary empty\">No location</span>;\n  }\n\n  const locationSummary = [\n    value.city?.shortName,\n    value.state?.shortName,\n    value.country?.shortName\n  ].filter(Boolean).join(', ');\n\n  return (\n    <div className=\"municipality-summary\" onClick={() => client?.assign(value)}>\n      <span className=\"icon\">üåÜ</span>\n      <span className=\"content\">{locationSummary}</span>\n    </div>\n  );\n};\n\nexport const Detail = ({\n  value,\n  client\n}: {\n  value?: Municipality,\n  client?: {\n    assign: (value_: Municipality) => void,\n    clear: () => void\n  }\n}): JSX.Element => {\n  if (!value && !client) {\n    return <div className=\"municipality-detail empty\">No location specified</div>;\n  }\n\n  const updateLevel = (level: MunicipalityLevel, updates: Partial<Place>) => {\n    client?.assign({\n      ...value,\n      [level]: {\n        ...value?.[level],\n        ...updates\n      }\n    });\n  };\n\n  const levels: MunicipalityLevel[] = ['city', 'county', 'state', 'country'];\n  return (\n    <div className=\"municipality-detail\">\n      {levels.map((level) => (\n        <div key={level} className=\"level-section\">\n          <h4>{level.charAt(0).toUpperCase() + level.slice(1)}</h4>\n          <div className=\"fields\">\n            {client ? (\n              <div className=\"field-inputs\">\n                <input\n                  type=\"text\"\n                  className=\"value-input\"\n                  value={value?.[level]?.shortName || ''}\n                  onChange={(e) => updateLevel(level, { shortName: e.target.value })}\n                  placeholder={`${level} short name`}\n                />\n                <input\n                  type=\"text\"\n                  className=\"value-input\"\n                  value={value?.[level]?.longName || ''}\n                  onChange={(e) => updateLevel(level, { longName: e.target.value })}\n                  placeholder={`${level} full name`}\n                />\n                {(level === 'state' || level === 'country') && (\n                  <input\n                    type=\"text\"\n                    className=\"value-input iso\"\n                    value={value?.[level]?.iso?.code || ''}\n                    onChange={(e) => updateLevel(level, { \n                      iso: { ...value?.[level]?.iso, code: e.target.value }\n                    })}\n                    placeholder=\"ISO code\"\n                  />\n                )}\n              </div>\n            ) : (\n              <div className=\"field-display\">\n                <span className=\"value\">\n                  {value?.[level]?.longName}\n                  {value?.[level]?.iso?.code && \n                    <span className=\"iso-code\">({value[level].iso.code})</span>\n                  }\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n      \n      {client && (\n        <div className=\"actions\">\n          <button onClick={() => client.clear()} className=\"clear-button\">‚úñ Clear</button>\n        </div>\n      )}\n    </div>\n  );\n};","import React from 'react';\nimport Where from 'omniglot-live-media-models/lib/Where';\nimport * as AddressComponents from './Address';\nimport * as MunicipalityComponents from './Municipality';\nimport './Where.css';\n\nexport const Summary = ({\n  value,\n  client\n}: {\n  value?: Where,\n  client?: {\n    assign: (value_: Where) => void,\n    clear: () => void\n  }\n}): JSX.Element => {\n  if (!value?.name) {\n    return <span className=\"where-summary empty\">Location not specified</span>;\n  }\n\n  return (\n    <div className=\"where-summary\" onClick={() => client?.assign(value)}>\n      <span className=\"icon\">üìç</span>\n      <span className=\"name\">{value.name}</span>\n      {(value.address || value.municipality) && \n        <span className=\"details\">\n          {value.address && <AddressComponents.Summary value={value.address} />}\n          {value.municipality && <MunicipalityComponents.Summary value={value.municipality} />}\n        </span>\n      }\n    </div>\n  );\n};\n\nexport const Detail = ({\n  value,\n  client\n}: {\n  value?: Where,\n  client?: {\n    assign: (value_: Where) => void,\n    clear: () => void\n  }\n}): JSX.Element => {\n  if (!value && !client) {\n    return <div className=\"where-detail empty\">Location not specified</div>;\n  }\n\n  return (\n    <div className=\"where-detail\">\n      <div className=\"name-section\">\n        <h3><span className=\"icon\">üìç</span> Location</h3>\n        <div className=\"name-content\">\n          <div className=\"name-row\">\n            <span className=\"label\">Name:</span>\n            {client ? (\n              <input\n                type=\"text\"\n                className=\"value-input\"\n                value={value?.name || ''}\n                onChange={(e) => client.assign({ ...value, name: e.target.value })}\n                placeholder=\"Location name\"\n              />\n            ) : (\n              <span className=\"value\">{value?.name}</span>\n            )}\n          </div>\n          <div className=\"name-row\">\n            <span className=\"label\">Place ID:</span>\n            {client ? (\n              <input\n                type=\"text\"\n                className=\"value-input\"\n                value={value?.googlePlaceId || ''}\n                onChange={(e) => client.assign({ name:\"\", ...value, googlePlaceId: e.target.value })}\n                placeholder=\"Google Place ID\"\n              />\n            ) : (\n              <span className=\"value\">{value?.googlePlaceId}</span>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"address-section\">\n        <h3><span className=\"icon\">üè†</span> Address</h3>\n        <AddressComponents.Detail \n          value={value?.address}\n          client={client && {\n            assign: (address) => client.assign({ name:\"\", ...value, address }),\n            clear: () => client.assign({ name:\"\", ...value, address: undefined })\n          }}\n        />\n      </div>\n\n      <div className=\"municipality-section\">\n        <h3><span className=\"icon\">üåÜ</span> Municipality</h3>\n        <MunicipalityComponents.Detail\n          value={value?.municipality}\n          client={client && {\n            assign: (municipality) => client.assign({ name:\"\", ...value, municipality }),\n            clear: () => client.assign({ name:\"\", ...value, municipality: undefined })\n          }}\n        />\n      </div>\n\n      {(value?.geo || client) && (\n        <div className=\"geo-section\">\n          <h3><span className=\"icon\">üåç</span> Geographic Coordinates</h3>\n          <div className=\"geo-content\">\n            <div className=\"geo-row\">\n              <span className=\"label\">Coordinates:</span>\n              {client ? (\n                <div className=\"geo-inputs\">\n                  <input\n                    type=\"number\"\n                    className=\"value-input coordinate\"\n                    value={value?.geo?.point?.lat || ''}\n                    onChange={(e) => client.assign({\n                      name:\"\", \n                      ...value,\n                      geo: {\n                        ...value?.geo,\n                        point: {\n                          ...value?.geo?.point,\n                          lat: parseFloat(e.target.value)\n                        }\n                      }\n                    })}\n                    placeholder=\"Latitude\"\n                    step=\"0.000001\"\n                  />\n                  <input\n                    type=\"number\"\n                    className=\"value-input coordinate\"\n                    value={value?.geo?.point?.lng || ''}\n                    onChange={(e) => client.assign({\n                      name:\"\", \n                      ...value,\n                      geo: {\n                        ...value?.geo,\n                        point: {\n                          ...value?.geo?.point,\n                          lng: parseFloat(e.target.value)\n                        }\n                      }\n                    })}\n                    placeholder=\"Longitude\"\n                    step=\"0.000001\"\n                  />\n                </div>\n              ) : (\n                <span className=\"value\">\n                  {value?.geo?.point && \n                    `${value?.geo.point.lat.toFixed(6)}, ${value?.geo.point.lng.toFixed(6)}`\n                  }\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {client && (\n        <div className=\"actions\">\n          <button onClick={() => client.clear()} className=\"clear-button\">‚úñ Clear</button>\n        </div>\n      )}\n    </div>\n  );\n};"],"mappings":"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","names":["Detail","jsx","jsxs","Detail","Detail","Summary","jsx","jsxs","Summary","Detail","Detail","Summary","jsx","jsxs","Summary","Detail"]}